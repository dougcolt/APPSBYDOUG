/**
 *  Auto Booster Fan
 *
 *  Copyright 2018 Doug Colt
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "DOUG'S AUTO BOOSTER FAN CONTROLLER",
    namespace: "dougcolt",
    author: "Doug Colt",
    description: "Turns on the blower fan automatically when thermostat switches into heating mode. ",
    category: "My Apps",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png",
    iconX3Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png")


preferences {
	section("ChooseThermostat:") {
        input "thethermostat", "capability.thermostat", required: true, title: "Select Thermostat to be Monitored:"
    }
    section("Select Blower Fan:") {
        input "theswitch", "capability.switch", required: true, title: "Select the Booster Fan:"
    }
    
}

def installed() {
	log.debug "Installed with settings: ${settings}"
 	subscribe(thethermostat, "thermostatOperatingState.heating", heatingDetectedHandler)
	subscribe(thethermostat, "thermostatOperatingState.idle", idleDetectedHandler)
}

def updated() {
	log.debug "Updated with settings: ${settings}"
	unsubscribe()
    subscribe(thethermostat, "thermostatOperatingState.heating", heatingDetectedHandler)
	subscribe(thethermostat, "thermostatOperatingState.idle", idleDetectedHandler)
}


def heatingDetectedHandler(evt) {
    log.debug "Doug's heatingDetectedHandler called: $evt"
    def thedelay= 60 * 1
     runIn(thedelay,turnOnSwitch)
     def thedelay2= 60 * 15
     runIn(thedelay2,getTheStatus)
     }
      

def idleDetectedHandler(evt) {
    log.debug "Doug's idleDetectedHandler called: $evt"
     def thedelay= 60 * 2
     runIn(thedelay,turnOffSwitch)
     thethermostat.ping()
     }
     
def turnOnSwitch() {
	log.debug "Turning on booster fans."
    theswitch.on()
}

def turnOffSwitch() {
	log.debug "Turning off booster fans."
    theswitch.off()
}

def getTheStatus() {
	log.debug "Polling thermostat"
    thethermostat.ping()
}
          
